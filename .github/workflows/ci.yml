name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd apps/web && npm ci
        
    - name: Run type checking
      run: |
        cd apps/web && npm run type-check
        
    - name: Run linting
      run: |
        cd apps/web && npm run lint
        
    - name: Run tests
      run: |
        cd apps/web && npm run test:coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./apps/web/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd apps/web && npm ci
        
    - name: Build packages
      run: npm run build:packages
      
    - name: Build application
      run: |
        cd apps/web && npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: apps/web/.next
        
    - name: Test Docker build
      run: |
        docker build -t brenda-cereals-test .
        docker run --rm brenda-cereals-test npm run type-check
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        npm audit --audit-level moderate
        cd apps/web && npm audit --audit-level moderate
        
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        
  quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd apps/web && npm ci
        
    - name: Run bundle analysis
      run: |
        cd apps/web && npm run build
        npx @next/bundle-analyzer .next/static/chunks/*.js
        
    - name: Check bundle size
      run: |
        cd apps/web
        npm run build
        echo "Bundle size check completed"
        
  notify-ci:
    runs-on: ubuntu-latest
    needs: [test, build, security, quality]
    if: always()
    
    steps:
    - name: Notify CI Status
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#ci-status'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
      
    - name: Create CI summary
      run: |
        echo "## CI/CD Pipeline Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Quality: ${{ needs.quality.result }}" >> $GITHUB_STEP_SUMMARY
